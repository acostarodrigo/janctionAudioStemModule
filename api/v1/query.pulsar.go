// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package audioStemv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryGetAudioStemTaskRequest       protoreflect.MessageDescriptor
	fd_QueryGetAudioStemTaskRequest_index protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetAudioStemTaskRequest = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetAudioStemTaskRequest")
	fd_QueryGetAudioStemTaskRequest_index = md_QueryGetAudioStemTaskRequest.Fields().ByName("index")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAudioStemTaskRequest)(nil)

type fastReflection_QueryGetAudioStemTaskRequest QueryGetAudioStemTaskRequest

func (x *QueryGetAudioStemTaskRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemTaskRequest)(x)
}

func (x *QueryGetAudioStemTaskRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAudioStemTaskRequest_messageType fastReflection_QueryGetAudioStemTaskRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAudioStemTaskRequest_messageType{}

type fastReflection_QueryGetAudioStemTaskRequest_messageType struct{}

func (x fastReflection_QueryGetAudioStemTaskRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemTaskRequest)(nil)
}
func (x fastReflection_QueryGetAudioStemTaskRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemTaskRequest)
}
func (x fastReflection_QueryGetAudioStemTaskRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemTaskRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemTaskRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAudioStemTaskRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAudioStemTaskRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemTaskRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAudioStemTaskRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != "" {
		value := protoreflect.ValueOfString(x.Index)
		if !f(fd_QueryGetAudioStemTaskRequest_index, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		return x.Index != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		x.Index = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		value := x.Index
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		x.Index = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		panic(fmt.Errorf("field index of message janction.audioStem.v1.QueryGetAudioStemTaskRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAudioStemTaskRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskRequest.index":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAudioStemTaskRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetAudioStemTaskRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAudioStemTaskRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAudioStemTaskRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAudioStemTaskRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAudioStemTaskRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Index)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemTaskRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Index) > 0 {
			i -= len(x.Index)
			copy(dAtA[i:], x.Index)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Index)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemTaskRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemTaskRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemTaskRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Index = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAudioStemTaskResponse                 protoreflect.MessageDescriptor
	fd_QueryGetAudioStemTaskResponse_audio_stem_task protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetAudioStemTaskResponse = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetAudioStemTaskResponse")
	fd_QueryGetAudioStemTaskResponse_audio_stem_task = md_QueryGetAudioStemTaskResponse.Fields().ByName("audio_stem_task")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAudioStemTaskResponse)(nil)

type fastReflection_QueryGetAudioStemTaskResponse QueryGetAudioStemTaskResponse

func (x *QueryGetAudioStemTaskResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemTaskResponse)(x)
}

func (x *QueryGetAudioStemTaskResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAudioStemTaskResponse_messageType fastReflection_QueryGetAudioStemTaskResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAudioStemTaskResponse_messageType{}

type fastReflection_QueryGetAudioStemTaskResponse_messageType struct{}

func (x fastReflection_QueryGetAudioStemTaskResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemTaskResponse)(nil)
}
func (x fastReflection_QueryGetAudioStemTaskResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemTaskResponse)
}
func (x fastReflection_QueryGetAudioStemTaskResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemTaskResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemTaskResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAudioStemTaskResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAudioStemTaskResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemTaskResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAudioStemTaskResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AudioStemTask != nil {
		value := protoreflect.ValueOfMessage(x.AudioStemTask.ProtoReflect())
		if !f(fd_QueryGetAudioStemTaskResponse_audio_stem_task, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		return x.AudioStemTask != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		x.AudioStemTask = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		value := x.AudioStemTask
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		x.AudioStemTask = value.Message().Interface().(*AudioStemTask)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		if x.AudioStemTask == nil {
			x.AudioStemTask = new(AudioStemTask)
		}
		return protoreflect.ValueOfMessage(x.AudioStemTask.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAudioStemTaskResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task":
		m := new(AudioStemTask)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAudioStemTaskResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetAudioStemTaskResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAudioStemTaskResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemTaskResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAudioStemTaskResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAudioStemTaskResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAudioStemTaskResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AudioStemTask != nil {
			l = options.Size(x.AudioStemTask)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemTaskResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AudioStemTask != nil {
			encoded, err := options.Marshal(x.AudioStemTask)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemTaskResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemTaskResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemTaskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AudioStemTask", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AudioStemTask == nil {
					x.AudioStemTask = &AudioStemTask{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AudioStemTask); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAudioStemLogsRequest          protoreflect.MessageDescriptor
	fd_QueryGetAudioStemLogsRequest_threadId protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetAudioStemLogsRequest = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetAudioStemLogsRequest")
	fd_QueryGetAudioStemLogsRequest_threadId = md_QueryGetAudioStemLogsRequest.Fields().ByName("threadId")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAudioStemLogsRequest)(nil)

type fastReflection_QueryGetAudioStemLogsRequest QueryGetAudioStemLogsRequest

func (x *QueryGetAudioStemLogsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemLogsRequest)(x)
}

func (x *QueryGetAudioStemLogsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAudioStemLogsRequest_messageType fastReflection_QueryGetAudioStemLogsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAudioStemLogsRequest_messageType{}

type fastReflection_QueryGetAudioStemLogsRequest_messageType struct{}

func (x fastReflection_QueryGetAudioStemLogsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemLogsRequest)(nil)
}
func (x fastReflection_QueryGetAudioStemLogsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemLogsRequest)
}
func (x fastReflection_QueryGetAudioStemLogsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemLogsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemLogsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAudioStemLogsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAudioStemLogsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemLogsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAudioStemLogsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ThreadId != "" {
		value := protoreflect.ValueOfString(x.ThreadId)
		if !f(fd_QueryGetAudioStemLogsRequest_threadId, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		return x.ThreadId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		x.ThreadId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		value := x.ThreadId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		x.ThreadId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		panic(fmt.Errorf("field threadId of message janction.audioStem.v1.QueryGetAudioStemLogsRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAudioStemLogsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsRequest.threadId":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAudioStemLogsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetAudioStemLogsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAudioStemLogsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAudioStemLogsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAudioStemLogsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAudioStemLogsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ThreadId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemLogsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ThreadId) > 0 {
			i -= len(x.ThreadId)
			copy(dAtA[i:], x.ThreadId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ThreadId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemLogsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemLogsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemLogsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ThreadId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ThreadId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAudioStemLogsResponse                 protoreflect.MessageDescriptor
	fd_QueryGetAudioStemLogsResponse_audio_stem_logs protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetAudioStemLogsResponse = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetAudioStemLogsResponse")
	fd_QueryGetAudioStemLogsResponse_audio_stem_logs = md_QueryGetAudioStemLogsResponse.Fields().ByName("audio_stem_logs")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAudioStemLogsResponse)(nil)

type fastReflection_QueryGetAudioStemLogsResponse QueryGetAudioStemLogsResponse

func (x *QueryGetAudioStemLogsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemLogsResponse)(x)
}

func (x *QueryGetAudioStemLogsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAudioStemLogsResponse_messageType fastReflection_QueryGetAudioStemLogsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAudioStemLogsResponse_messageType{}

type fastReflection_QueryGetAudioStemLogsResponse_messageType struct{}

func (x fastReflection_QueryGetAudioStemLogsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAudioStemLogsResponse)(nil)
}
func (x fastReflection_QueryGetAudioStemLogsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemLogsResponse)
}
func (x fastReflection_QueryGetAudioStemLogsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemLogsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAudioStemLogsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAudioStemLogsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAudioStemLogsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAudioStemLogsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAudioStemLogsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AudioStemLogs != nil {
		value := protoreflect.ValueOfMessage(x.AudioStemLogs.ProtoReflect())
		if !f(fd_QueryGetAudioStemLogsResponse_audio_stem_logs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		return x.AudioStemLogs != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		x.AudioStemLogs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		value := x.AudioStemLogs
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		x.AudioStemLogs = value.Message().Interface().(*AudioStemLogs)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		if x.AudioStemLogs == nil {
			x.AudioStemLogs = new(AudioStemLogs)
		}
		return protoreflect.ValueOfMessage(x.AudioStemLogs.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAudioStemLogsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs":
		m := new(AudioStemLogs)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetAudioStemLogsResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetAudioStemLogsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAudioStemLogsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetAudioStemLogsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAudioStemLogsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAudioStemLogsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAudioStemLogsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAudioStemLogsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAudioStemLogsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AudioStemLogs != nil {
			l = options.Size(x.AudioStemLogs)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemLogsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AudioStemLogs != nil {
			encoded, err := options.Marshal(x.AudioStemLogs)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAudioStemLogsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemLogsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAudioStemLogsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AudioStemLogs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AudioStemLogs == nil {
					x.AudioStemLogs = &AudioStemLogs{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AudioStemLogs); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetPendingAudioStemTaskRequest protoreflect.MessageDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetPendingAudioStemTaskRequest = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetPendingAudioStemTaskRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPendingAudioStemTaskRequest)(nil)

type fastReflection_QueryGetPendingAudioStemTaskRequest QueryGetPendingAudioStemTaskRequest

func (x *QueryGetPendingAudioStemTaskRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPendingAudioStemTaskRequest)(x)
}

func (x *QueryGetPendingAudioStemTaskRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPendingAudioStemTaskRequest_messageType fastReflection_QueryGetPendingAudioStemTaskRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPendingAudioStemTaskRequest_messageType{}

type fastReflection_QueryGetPendingAudioStemTaskRequest_messageType struct{}

func (x fastReflection_QueryGetPendingAudioStemTaskRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPendingAudioStemTaskRequest)(nil)
}
func (x fastReflection_QueryGetPendingAudioStemTaskRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPendingAudioStemTaskRequest)
}
func (x fastReflection_QueryGetPendingAudioStemTaskRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPendingAudioStemTaskRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPendingAudioStemTaskRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPendingAudioStemTaskRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetPendingAudioStemTaskRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPendingAudioStemTaskRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPendingAudioStemTaskRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPendingAudioStemTaskRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPendingAudioStemTaskRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryGetPendingAudioStemTaskResponse_1_list)(nil)

type _QueryGetPendingAudioStemTaskResponse_1_list struct {
	list *[]*AudioStemTask
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AudioStemTask)
	(*x.list)[i] = concreteValue
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AudioStemTask)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(AudioStemTask)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) NewElement() protoreflect.Value {
	v := new(AudioStemTask)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryGetPendingAudioStemTaskResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryGetPendingAudioStemTaskResponse                  protoreflect.MessageDescriptor
	fd_QueryGetPendingAudioStemTaskResponse_audio_stem_tasks protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetPendingAudioStemTaskResponse = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetPendingAudioStemTaskResponse")
	fd_QueryGetPendingAudioStemTaskResponse_audio_stem_tasks = md_QueryGetPendingAudioStemTaskResponse.Fields().ByName("audio_stem_tasks")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPendingAudioStemTaskResponse)(nil)

type fastReflection_QueryGetPendingAudioStemTaskResponse QueryGetPendingAudioStemTaskResponse

func (x *QueryGetPendingAudioStemTaskResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPendingAudioStemTaskResponse)(x)
}

func (x *QueryGetPendingAudioStemTaskResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPendingAudioStemTaskResponse_messageType fastReflection_QueryGetPendingAudioStemTaskResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPendingAudioStemTaskResponse_messageType{}

type fastReflection_QueryGetPendingAudioStemTaskResponse_messageType struct{}

func (x fastReflection_QueryGetPendingAudioStemTaskResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPendingAudioStemTaskResponse)(nil)
}
func (x fastReflection_QueryGetPendingAudioStemTaskResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPendingAudioStemTaskResponse)
}
func (x fastReflection_QueryGetPendingAudioStemTaskResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPendingAudioStemTaskResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPendingAudioStemTaskResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPendingAudioStemTaskResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetPendingAudioStemTaskResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPendingAudioStemTaskResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.AudioStemTasks) != 0 {
		value := protoreflect.ValueOfList(&_QueryGetPendingAudioStemTaskResponse_1_list{list: &x.AudioStemTasks})
		if !f(fd_QueryGetPendingAudioStemTaskResponse_audio_stem_tasks, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		return len(x.AudioStemTasks) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		x.AudioStemTasks = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		if len(x.AudioStemTasks) == 0 {
			return protoreflect.ValueOfList(&_QueryGetPendingAudioStemTaskResponse_1_list{})
		}
		listValue := &_QueryGetPendingAudioStemTaskResponse_1_list{list: &x.AudioStemTasks}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		lv := value.List()
		clv := lv.(*_QueryGetPendingAudioStemTaskResponse_1_list)
		x.AudioStemTasks = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		if x.AudioStemTasks == nil {
			x.AudioStemTasks = []*AudioStemTask{}
		}
		value := &_QueryGetPendingAudioStemTaskResponse_1_list{list: &x.AudioStemTasks}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks":
		list := []*AudioStemTask{}
		return protoreflect.ValueOfList(&_QueryGetPendingAudioStemTaskResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPendingAudioStemTaskResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.AudioStemTasks) > 0 {
			for _, e := range x.AudioStemTasks {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AudioStemTasks) > 0 {
			for iNdEx := len(x.AudioStemTasks) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AudioStemTasks[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPendingAudioStemTaskResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPendingAudioStemTaskResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPendingAudioStemTaskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AudioStemTasks", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AudioStemTasks = append(x.AudioStemTasks, &AudioStemTask{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AudioStemTasks[len(x.AudioStemTasks)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWorkerRequest        protoreflect.MessageDescriptor
	fd_QueryGetWorkerRequest_worker protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetWorkerRequest = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetWorkerRequest")
	fd_QueryGetWorkerRequest_worker = md_QueryGetWorkerRequest.Fields().ByName("worker")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWorkerRequest)(nil)

type fastReflection_QueryGetWorkerRequest QueryGetWorkerRequest

func (x *QueryGetWorkerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWorkerRequest)(x)
}

func (x *QueryGetWorkerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWorkerRequest_messageType fastReflection_QueryGetWorkerRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWorkerRequest_messageType{}

type fastReflection_QueryGetWorkerRequest_messageType struct{}

func (x fastReflection_QueryGetWorkerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWorkerRequest)(nil)
}
func (x fastReflection_QueryGetWorkerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWorkerRequest)
}
func (x fastReflection_QueryGetWorkerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWorkerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWorkerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWorkerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWorkerRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWorkerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWorkerRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetWorkerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWorkerRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWorkerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWorkerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Worker != "" {
		value := protoreflect.ValueOfString(x.Worker)
		if !f(fd_QueryGetWorkerRequest_worker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWorkerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		return x.Worker != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		x.Worker = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWorkerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		value := x.Worker
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		x.Worker = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		panic(fmt.Errorf("field worker of message janction.audioStem.v1.QueryGetWorkerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWorkerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerRequest.worker":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerRequest"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWorkerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetWorkerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWorkerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWorkerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWorkerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWorkerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Worker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWorkerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Worker) > 0 {
			i -= len(x.Worker)
			copy(dAtA[i:], x.Worker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Worker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWorkerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWorkerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWorkerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Worker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWorkerResponse        protoreflect.MessageDescriptor
	fd_QueryGetWorkerResponse_worker protoreflect.FieldDescriptor
)

func init() {
	file_janction_audioStem_v1_query_proto_init()
	md_QueryGetWorkerResponse = File_janction_audioStem_v1_query_proto.Messages().ByName("QueryGetWorkerResponse")
	fd_QueryGetWorkerResponse_worker = md_QueryGetWorkerResponse.Fields().ByName("worker")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWorkerResponse)(nil)

type fastReflection_QueryGetWorkerResponse QueryGetWorkerResponse

func (x *QueryGetWorkerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWorkerResponse)(x)
}

func (x *QueryGetWorkerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_janction_audioStem_v1_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWorkerResponse_messageType fastReflection_QueryGetWorkerResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWorkerResponse_messageType{}

type fastReflection_QueryGetWorkerResponse_messageType struct{}

func (x fastReflection_QueryGetWorkerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWorkerResponse)(nil)
}
func (x fastReflection_QueryGetWorkerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWorkerResponse)
}
func (x fastReflection_QueryGetWorkerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWorkerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWorkerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWorkerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWorkerResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWorkerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWorkerResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetWorkerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWorkerResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWorkerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWorkerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Worker != nil {
		value := protoreflect.ValueOfMessage(x.Worker.ProtoReflect())
		if !f(fd_QueryGetWorkerResponse_worker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWorkerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		return x.Worker != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		x.Worker = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWorkerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		value := x.Worker
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		x.Worker = value.Message().Interface().(*Worker)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		if x.Worker == nil {
			x.Worker = new(Worker)
		}
		return protoreflect.ValueOfMessage(x.Worker.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWorkerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "janction.audioStem.v1.QueryGetWorkerResponse.worker":
		m := new(Worker)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: janction.audioStem.v1.QueryGetWorkerResponse"))
		}
		panic(fmt.Errorf("message janction.audioStem.v1.QueryGetWorkerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWorkerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in janction.audioStem.v1.QueryGetWorkerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWorkerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWorkerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWorkerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWorkerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWorkerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Worker != nil {
			l = options.Size(x.Worker)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWorkerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Worker != nil {
			encoded, err := options.Marshal(x.Worker)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWorkerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWorkerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWorkerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Worker", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Worker == nil {
					x.Worker = &Worker{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Worker); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: janction/audioStem/v1/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryGetGameRequest is the request type for the Query/GetGame RPC
// method.
type QueryGetAudioStemTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *QueryGetAudioStemTaskRequest) Reset() {
	*x = QueryGetAudioStemTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAudioStemTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAudioStemTaskRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAudioStemTaskRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAudioStemTaskRequest) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryGetAudioStemTaskRequest) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

// QueryGetGameResponse is the response type for the Query/GetGame RPC
// method.
type QueryGetAudioStemTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Game defines the game at the requested index.
	AudioStemTask *AudioStemTask `protobuf:"bytes,1,opt,name=audio_stem_task,json=audioStemTask,proto3" json:"audio_stem_task,omitempty"`
}

func (x *QueryGetAudioStemTaskResponse) Reset() {
	*x = QueryGetAudioStemTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAudioStemTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAudioStemTaskResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAudioStemTaskResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAudioStemTaskResponse) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryGetAudioStemTaskResponse) GetAudioStemTask() *AudioStemTask {
	if x != nil {
		return x.AudioStemTask
	}
	return nil
}

// QueryGetGameRequest is the request type for the Query/GetGame RPC
// method.
type QueryGetAudioStemLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
}

func (x *QueryGetAudioStemLogsRequest) Reset() {
	*x = QueryGetAudioStemLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAudioStemLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAudioStemLogsRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAudioStemLogsRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAudioStemLogsRequest) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryGetAudioStemLogsRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

// QueryGetGameResponse is the response type for the Query/GetGame RPC
// method.
type QueryGetAudioStemLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Game defines the game at the requested index.
	AudioStemLogs *AudioStemLogs `protobuf:"bytes,1,opt,name=audio_stem_logs,json=audioStemLogs,proto3" json:"audio_stem_logs,omitempty"`
}

func (x *QueryGetAudioStemLogsResponse) Reset() {
	*x = QueryGetAudioStemLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAudioStemLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAudioStemLogsResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAudioStemLogsResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAudioStemLogsResponse) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryGetAudioStemLogsResponse) GetAudioStemLogs() *AudioStemLogs {
	if x != nil {
		return x.AudioStemLogs
	}
	return nil
}

type QueryGetPendingAudioStemTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryGetPendingAudioStemTaskRequest) Reset() {
	*x = QueryGetPendingAudioStemTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPendingAudioStemTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPendingAudioStemTaskRequest) ProtoMessage() {}

// Deprecated: Use QueryGetPendingAudioStemTaskRequest.ProtoReflect.Descriptor instead.
func (*QueryGetPendingAudioStemTaskRequest) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{4}
}

type QueryGetPendingAudioStemTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioStemTasks []*AudioStemTask `protobuf:"bytes,1,rep,name=audio_stem_tasks,json=audioStemTasks,proto3" json:"audio_stem_tasks,omitempty"`
}

func (x *QueryGetPendingAudioStemTaskResponse) Reset() {
	*x = QueryGetPendingAudioStemTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPendingAudioStemTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPendingAudioStemTaskResponse) ProtoMessage() {}

// Deprecated: Use QueryGetPendingAudioStemTaskResponse.ProtoReflect.Descriptor instead.
func (*QueryGetPendingAudioStemTaskResponse) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryGetPendingAudioStemTaskResponse) GetAudioStemTasks() []*AudioStemTask {
	if x != nil {
		return x.AudioStemTasks
	}
	return nil
}

type QueryGetWorkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker string `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *QueryGetWorkerRequest) Reset() {
	*x = QueryGetWorkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWorkerRequest) ProtoMessage() {}

// Deprecated: Use QueryGetWorkerRequest.ProtoReflect.Descriptor instead.
func (*QueryGetWorkerRequest) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGetWorkerRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

type QueryGetWorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker *Worker `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *QueryGetWorkerResponse) Reset() {
	*x = QueryGetWorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_janction_audioStem_v1_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWorkerResponse) ProtoMessage() {}

// Deprecated: Use QueryGetWorkerResponse.ProtoReflect.Descriptor instead.
func (*QueryGetWorkerResponse) Descriptor() ([]byte, []int) {
	return file_janction_audioStem_v1_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryGetWorkerResponse) GetWorker() *Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

var File_janction_audioStem_v1_query_proto protoreflect.FileDescriptor

var file_janction_audioStem_v1_query_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x6a, 0x61, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34,
	0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x6d, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54,
	0x61, 0x73, 0x6b, 0x22, 0x3a, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22,
	0x6d, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6a, 0x61, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x25,
	0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65,
	0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x10, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0e, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x2f, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x4f,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x32,
	0x95, 0x05, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0xaa, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x33,
	0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x88, 0xe7, 0xb0, 0x2a, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x7d, 0x12, 0xad, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x33, 0x2e, 0x6a, 0x61,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x88, 0xe7, 0xb0, 0x2a, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f,
	0x2f, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x7d, 0x12,
	0x95, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x3a, 0x2e, 0x6a,
	0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6a, 0x61, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xe2, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e,
	0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74,
	0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4a, 0x41, 0x58, 0xaa, 0x02,
	0x15, 0x4a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x4a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x21, 0x4a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x74, 0x65, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x17, 0x4a, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x65, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_janction_audioStem_v1_query_proto_rawDescOnce sync.Once
	file_janction_audioStem_v1_query_proto_rawDescData = file_janction_audioStem_v1_query_proto_rawDesc
)

func file_janction_audioStem_v1_query_proto_rawDescGZIP() []byte {
	file_janction_audioStem_v1_query_proto_rawDescOnce.Do(func() {
		file_janction_audioStem_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_janction_audioStem_v1_query_proto_rawDescData)
	})
	return file_janction_audioStem_v1_query_proto_rawDescData
}

var file_janction_audioStem_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_janction_audioStem_v1_query_proto_goTypes = []interface{}{
	(*QueryGetAudioStemTaskRequest)(nil),         // 0: janction.audioStem.v1.QueryGetAudioStemTaskRequest
	(*QueryGetAudioStemTaskResponse)(nil),        // 1: janction.audioStem.v1.QueryGetAudioStemTaskResponse
	(*QueryGetAudioStemLogsRequest)(nil),         // 2: janction.audioStem.v1.QueryGetAudioStemLogsRequest
	(*QueryGetAudioStemLogsResponse)(nil),        // 3: janction.audioStem.v1.QueryGetAudioStemLogsResponse
	(*QueryGetPendingAudioStemTaskRequest)(nil),  // 4: janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest
	(*QueryGetPendingAudioStemTaskResponse)(nil), // 5: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse
	(*QueryGetWorkerRequest)(nil),                // 6: janction.audioStem.v1.QueryGetWorkerRequest
	(*QueryGetWorkerResponse)(nil),               // 7: janction.audioStem.v1.QueryGetWorkerResponse
	(*AudioStemTask)(nil),                        // 8: janction.audioStem.v1.AudioStemTask
	(*AudioStemLogs)(nil),                        // 9: janction.audioStem.v1.AudioStemLogs
	(*Worker)(nil),                               // 10: janction.audioStem.v1.Worker
}
var file_janction_audioStem_v1_query_proto_depIdxs = []int32{
	8,  // 0: janction.audioStem.v1.QueryGetAudioStemTaskResponse.audio_stem_task:type_name -> janction.audioStem.v1.AudioStemTask
	9,  // 1: janction.audioStem.v1.QueryGetAudioStemLogsResponse.audio_stem_logs:type_name -> janction.audioStem.v1.AudioStemLogs
	8,  // 2: janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse.audio_stem_tasks:type_name -> janction.audioStem.v1.AudioStemTask
	10, // 3: janction.audioStem.v1.QueryGetWorkerResponse.worker:type_name -> janction.audioStem.v1.Worker
	0,  // 4: janction.audioStem.v1.Query.GetAudioStemTask:input_type -> janction.audioStem.v1.QueryGetAudioStemTaskRequest
	2,  // 5: janction.audioStem.v1.Query.GetAudioStemLogs:input_type -> janction.audioStem.v1.QueryGetAudioStemLogsRequest
	6,  // 6: janction.audioStem.v1.Query.GetWorker:input_type -> janction.audioStem.v1.QueryGetWorkerRequest
	4,  // 7: janction.audioStem.v1.Query.GetPendingAudioStemTasks:input_type -> janction.audioStem.v1.QueryGetPendingAudioStemTaskRequest
	1,  // 8: janction.audioStem.v1.Query.GetAudioStemTask:output_type -> janction.audioStem.v1.QueryGetAudioStemTaskResponse
	3,  // 9: janction.audioStem.v1.Query.GetAudioStemLogs:output_type -> janction.audioStem.v1.QueryGetAudioStemLogsResponse
	7,  // 10: janction.audioStem.v1.Query.GetWorker:output_type -> janction.audioStem.v1.QueryGetWorkerResponse
	5,  // 11: janction.audioStem.v1.Query.GetPendingAudioStemTasks:output_type -> janction.audioStem.v1.QueryGetPendingAudioStemTaskResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_janction_audioStem_v1_query_proto_init() }
func file_janction_audioStem_v1_query_proto_init() {
	if File_janction_audioStem_v1_query_proto != nil {
		return
	}
	file_janction_audioStem_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_janction_audioStem_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAudioStemTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAudioStemTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAudioStemLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAudioStemLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPendingAudioStemTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPendingAudioStemTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWorkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_janction_audioStem_v1_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_janction_audioStem_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_janction_audioStem_v1_query_proto_goTypes,
		DependencyIndexes: file_janction_audioStem_v1_query_proto_depIdxs,
		MessageInfos:      file_janction_audioStem_v1_query_proto_msgTypes,
	}.Build()
	File_janction_audioStem_v1_query_proto = out.File
	file_janction_audioStem_v1_query_proto_rawDesc = nil
	file_janction_audioStem_v1_query_proto_goTypes = nil
	file_janction_audioStem_v1_query_proto_depIdxs = nil
}
